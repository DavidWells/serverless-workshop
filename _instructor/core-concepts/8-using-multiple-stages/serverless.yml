
service: using-multiple-stages

# WORKSHOP_START
# Step 3. In this_file, add a `custom` block and define a `stage` property. Set that property to a serverless `${variable, defaultValue}` with a default value of 'dev' #
# WORKSHOP_END
# FINAL_START
custom:
  stage: ${opt:stage, 'dev'}
# FINAL_END

provider:
  name: aws
  runtime: nodejs12.x
  # WORKSHOP_START
  # Step 4. In this_file, set the stage key to the custom.stage value set in previous step
  # WORKSHOP_END
  # FINAL_START
  stage: ${self:custom.stage}
  # FINAL_END
  # WORKSHOP_START
  # Step 5. In this_file, set an environment variable that uses the serverless file variable syntax to grab a file name with the current stage in it. Example `config.dev.json`. Hint this uses nested variables http://bit.ly/2AHvkKO
  # WORKSHOP_END
  # FINAL_START
  environment:
    MY_STAGE_SPECIFIC_VAR: ${file(./config.${self:custom.stage}.json):projectName}
  # FINAL_END

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
