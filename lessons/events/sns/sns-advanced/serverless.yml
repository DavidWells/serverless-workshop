service: aws-sns-advanced

# Define a `plugins` block and add `serverless-pseudo-parameters` to the plugins array. #

# Step 4. In this_file, Define a `custom` block and add `topicName` and `topicArn`. We will use this reference in other areas of `serverless.yml`. http://bit.ly/2Dccix1 #

provider:
  name: aws
  runtime: nodejs12.x
  # Step 5. In this_file, expose the `TOPIC_NAME` to `environment` variables using the `${self:custom.topicName}` reference. This is for the eventProducer to send message to our newly created topic #
  # Step 6. In this_file, Create the IAM role `iamRoleStatements` needed to `sns:Publish`. This allows for our `eventProducer` function to publish messages to our SNS topic.

functions:
  eventProducer:
    handler: handler.eventProducer
    events:
      - http:
          path: trigger
          method: get
          cors: true

  eventConsumer:
    handler: handler.eventConsumer
    # Step 7. In this_file, attach the `sns` event to the `eventConsumer` function. Use the full topic ARN to subscribe to the already created topic. See http://bit.ly/2Dccix1 for more info on sns event

resources:
# Step 3. In this_file, define a `resources` block and add the CloudFormation to create a new SNS topic. See `readme.md` for SNS CloudFormation template #
